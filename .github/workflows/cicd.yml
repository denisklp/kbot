  name: KBOT-CICD

  on: 
    push:
      branches:
        - main
  env:
    TARGETOS: linux
    TARGETARCH: amd64
  
  jobs:
    ci:
      name: CI
      runs-on: ubuntu-latest
  
      permissions:
        contents: 'read'
        id-token: 'write'
        packages: write

      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Run test
          run: make test
  # GHCR authorisation
  
        - name: 'Login to GitHub Container Registry'
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  
            
        - name: Build&Push
          env:
            APP: "kbot"
          run: make image push
    cd:
      name: CD
      needs: ci
      runs-on: ubuntu-latest
  
      steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - run: echo "VERSION=$(git describe --tags --abbrev=0 --always)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
  
      - uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION) | .image.os=strenv(TARGETOS) | .image.arch=strenv(TARGETARCH)' helm/values.yaml
  
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "update version $VERSION"
          git push
      
      - name: Package Helm Chart
        run: |
          helm package helm/ -d docs/
          helm repo index docs/ --url https://denisklp.github.io/kbot/
          
      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a v${{ github.run_number }} -m "Release v${{ github.run_number }}"
          git push origin v${{ github.run_number }}
          echo "::set-output name=tag::v${{ github.run_number }}"
  
      - name: Publish Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating release..."
          gh release create ${{ steps.create_release.outputs.tag }} -t "Release ${{ github.run_number }}"
